{"version":3,"file":"static/js/304.c5143c5e.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  margin-bottom: 15px;\n`;\n\nexport const List = styled.li`\n  margin-top: 10px;\n`;\n\nexport const Item = styled(Link)`\n  color: black;\n  color: inherit;\n  font-size: 15px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    -webkit-transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus,\n  &:active {\n    color: orangered;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { getTrending } from 'services/api';\nimport { Title, List, Item } from './Home.styled';\nimport image from 'image/image.png';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  // const [nameItem, setNameItem] = useState([]);\n  // console.log(movies);\n\n  useEffect(() => {\n    getTrending()\n      .then(listMovies => setMovies(listMovies.results))\n      .catch(error => console.log(error.message));\n  }, []);\n\n  // getSearchMovies(orig)\n  //   .then(movieDetails => movieDetails.results)\n  //   .then(moviesName => {\n  //     setNameItem(\n  //       moviesName.find(listName => {\n  //         if (listName.media_type === 'tv') {\n  //           return listName.original_name.includes(orig);\n  //         }\n  //         return listName.original_title.includes(orig);\n  //       })\n  //     );\n  //   });\n\n  return (\n    <div>\n      <Title>Trending today</Title>\n      <ul>\n        {movies.map(({ title, id, poster_path }) => {\n          return (\n            <List key={nanoid()}>\n              <Item to={`/films/${id}`}>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                      : `${image}`\n                  }\n                  alt=\"poster\"\n                  width=\"200\"\n                  loading=\"lazy\"\n                />\n                {title}\n              </Item>\n            </List>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const baseUrl = 'https://api.themoviedb.org/3/';\nconst KEY_API = 'a19b1687fe9e52121952a921faf7bb58';\n\nconst bazonUrl = `https://bazon.cc/api/`;\nconst KEY_BAZON = `c69778ce88918520e7adb0dc758dbe37`;\n\n//bazon.cc/api/search?token=c69778ce88918520e7adb0dc758dbe37&title=Бетмен\n\n//bazon.cc/api/search?token=c69778ce88918520e7adb0dc758dbe37&kp=841738\n\n//api.themoviedb.org/3/search/keyword?api_key=c69778ce88918520e7adb0dc758dbe37&query=d&page=1\n\nexport const getTrending = async () => {\n  const response = await fetch(`\n${baseUrl}trending/movie/week?api_key=${KEY_API}&language=ru`);\n\n  if (response.ok) {\n    const listMovies = await response.json('');\n    return listMovies;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getSearchMovies = async query => {\n  const response = await fetch(`\n       ${baseUrl}search/multi?api_key=${KEY_API}&language=en&query=${query}&page=1&include_adult=false\n    `);\n  if (response.ok) {\n    const query = await response.json('');\n    return query;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\n// export const getDetails = async movieId => {\n//   const response = await fetch(\n//     `${baseUrl}movie/${movieId}?api_key=${KEY_API}&language=ru`\n//   );\n//   if (response.ok) {\n//     const movieDetails = await response.json('');\n//     return movieDetails;\n//   }\n//   return Promise.reject(new Error(`error`));\n// };\n\nexport const getSearchTitle = async query => {\n  const response = await fetch(`\n       ${bazonUrl}search?token=${KEY_BAZON}&title=${query}\n    `);\n  if (response.ok) {\n    const query = await response.json('');\n    return query;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getDetails = async movieId => {\n  const response = await fetch(\n    `${bazonUrl}search?token=${KEY_BAZON}&kp=${movieId}`\n  );\n  if (response.ok) {\n    const movieDetails = await response.json('');\n    return movieDetails;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getCast = async movieId => {\n  const responnse = await fetch(`\n${baseUrl}movie/${movieId}/credits?api_key=${KEY_API}&language=uk\n    `);\n  if (responnse.ok) {\n    const casts = await responnse.json('');\n    return casts;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getReviews = async movieId => {\n  const responnse = await fetch(`\n${baseUrl}movie/${movieId}/reviews?api_key=${KEY_API}&language=uk\n    `);\n  if (responnse.ok) {\n    const reviews = await responnse.json('');\n    return reviews;\n  }\n  return Promise.reject(new Error(`error`));\n};\n// bazon.cc/api/json?token=c69778ce88918520e7adb0dc758dbe37&type=all&page=1\nconst page = 1;\n\nexport const getListMovies = async () => {\n  const response = await fetch(\n    `${bazonUrl}json?token=${KEY_BAZON}&type=film&page=${page}&year=2023`\n  );\n  if (response.ok) {\n    const movieDetails = await response.json('');\n    return movieDetails;\n  }\n  return Promise.reject(new Error(`error`));\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Title","styled","List","Item","Link","useState","movies","setMovies","useEffect","getTrending","then","listMovies","results","catch","error","console","log","message","map","title","id","poster_path","to","src","image","alt","width","loading","nanoid","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","fn","self","this","args","arguments","apply","err","undefined","baseUrl","KEY_API","bazonUrl","KEY_BAZON","fetch","response","ok","json","Error","getSearchMovies","query","getSearchTitle","getDetails","movieId","movieDetails","getCast","responnse","casts","getReviews","reviews","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}