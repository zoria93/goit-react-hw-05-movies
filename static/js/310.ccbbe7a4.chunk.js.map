{"version":3,"file":"static/js/310.ccbbe7a4.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const SearchInput = styled.input`\n  height: 32px;\n  width: 250px;\n\n  border-radius: 8px;\n  border-color: deepskyblue;\n  &:hover,\n  &:focus,\n  &:active {\n    outline-color: orangered;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  margin-left: 3px;\n  text-decoration: none;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-weight: 500;\n  background-color: deepskyblue;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: orangered;\n  }\n`;\nexport const List = styled.li`\n  margin-top: 10px;\n`;\n\nexport const Item = styled(Link)`\n  color: black;\n  color: inherit;\n  font-size: 15px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    -webkit-transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus,\n  &:active {\n    color: orangered;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-top: 10px;\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearchTitle } from 'services/api';\n// import { getSearchMovies } from 'services/api';\nimport { SearchInput, Button } from 'pages/Movies/Movies.styled';\nimport { Item, Text, List } from 'pages/Movies/Movies.styled';\nimport { nanoid } from 'nanoid';\n\nconst Movies = () => {\n  const [name, setName] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [value, setValue] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n  console.log();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    getSearchTitle(query)\n      .then(listMovies => {\n        if (listMovies.results.length === 0) {\n          setValue(true);\n          return;\n        }\n        setMovies(listMovies.results);\n        setValue(false);\n      })\n      .catch(error => console.log(error.message));\n  }, [query]);\n\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: name });\n    setName('');\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} action=\"off\">\n        <SearchInput\n          placeholder=\"Search movies...\"\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n        />\n        <Button type=\"submit\">Search</Button>\n      </form>\n      {movies.length > 0 && (\n        // <ul>\n        //   {movies.map(({ title, id }) => {\n        //     return (\n        //       <List key={id}>\n        //         <Item to={`/movies/${id}`} state={{ from: location }}>\n        //           {title}\n        //         </Item>\n        //       </List>\n        //     );\n        //   })}\n        // </ul>\n        <ul>\n          {movies.map(({ kinopoisk_id, info: { rus } }) => {\n            return (\n              <List key={nanoid()}>\n                <Item to={`/movies/${kinopoisk_id}`} state={{ from: location }}>\n                  {rus}\n                </Item>\n              </List>\n            );\n          })}\n        </ul>\n      )}\n      {value && (\n        <Text>There is no movies on your query! Please try again!</Text>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const baseUrl = 'https://api.themoviedb.org/3/';\nconst KEY_API = 'a19b1687fe9e52121952a921faf7bb58';\n\nconst bazonUrl = `https://bazon.cc/api/`;\nconst KEY_BAZON = `c69778ce88918520e7adb0dc758dbe37`;\n\n//bazon.cc/api/search?token=c69778ce88918520e7adb0dc758dbe37&title=Бетмен\n\n//bazon.cc/api/search?token=c69778ce88918520e7adb0dc758dbe37&kp=841738\n\n//api.themoviedb.org/3/search/keyword?api_key=c69778ce88918520e7adb0dc758dbe37&query=d&page=1\n\nexport const getTrending = async () => {\n  const response = await fetch(`\n${baseUrl}trending/movie/week?api_key=${KEY_API}&language=ru`);\n\n  if (response.ok) {\n    const listMovies = await response.json('');\n    return listMovies;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getSearchMovies = async query => {\n  const response = await fetch(`\n       ${baseUrl}search/multi?api_key=${KEY_API}&language=en&query=${query}&page=1&include_adult=false\n    `);\n  if (response.ok) {\n    const query = await response.json('');\n    return query;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getDetailsFilms = async movieId => {\n  const response = await fetch(\n    `${baseUrl}movie/${movieId}?api_key=${KEY_API}&language=ru`\n  );\n  if (response.ok) {\n    const movieDetails = await response.json('');\n    return movieDetails;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getSearchTitle = async query => {\n  const response = await fetch(`\n       ${bazonUrl}search?token=${KEY_BAZON}&title=${query}\n    `);\n  if (response.ok) {\n    const query = await response.json('');\n    return query;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getDetails = async movieId => {\n  const response = await fetch(\n    `${bazonUrl}search?token=${KEY_BAZON}&kp=${movieId}`\n  );\n  if (response.ok) {\n    const movieDetails = await response.json('');\n    return movieDetails;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getCast = async movieId => {\n  const responnse = await fetch(`\n${baseUrl}movie/${movieId}/credits?api_key=${KEY_API}&language=uk\n    `);\n  if (responnse.ok) {\n    const casts = await responnse.json('');\n    return casts;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getReviews = async movieId => {\n  const responnse = await fetch(`\n${baseUrl}movie/${movieId}/reviews?api_key=${KEY_API}&language=uk\n    `);\n  if (responnse.ok) {\n    const reviews = await responnse.json('');\n    return reviews;\n  }\n  return Promise.reject(new Error(`error`));\n};\n// bazon.cc/api/json?token=c69778ce88918520e7adb0dc758dbe37&type=all&page=1\nconst page = 1;\n\nexport const getListMovies = async () => {\n  const response = await fetch(\n    `${bazonUrl}json?token=${KEY_BAZON}&type=film&page=${page}&year=2023`\n  );\n  if (response.ok) {\n    const movieDetails = await response.json('');\n    return movieDetails;\n  }\n  return Promise.reject(new Error(`error`));\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["SearchInput","styled","Button","List","Item","Link","Text","useState","name","setName","movies","setMovies","value","setValue","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","console","log","useEffect","getSearchTitle","then","listMovies","results","length","catch","error","message","onSubmit","e","preventDefault","action","placeholder","type","onChange","target","map","kinopoisk_id","rus","info","to","state","from","nanoid","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","done","Promise","fn","self","this","args","arguments","apply","err","undefined","baseUrl","KEY_API","bazonUrl","KEY_BAZON","getTrending","fetch","response","ok","json","Error","getSearchMovies","getDetailsFilms","movieId","movieDetails","getDetails","getCast","responnse","casts","getReviews","reviews","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}