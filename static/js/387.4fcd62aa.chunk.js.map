{"version":3,"file":"static/js/387.4fcd62aa.chunk.js","mappings":"iPAEaA,EAAOC,EAAAA,GAAAA,GAAH,iGAOJC,EAAMD,EAAAA,GAAAA,IAAH,iE,kBCiChB,EApCa,WACX,OAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GACLI,MAAK,SAAAC,GAAK,OAAIN,EAAcM,EAAMC,KAAxB,IACVC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACX,KAGF,SAACN,EAAD,UACGI,EAAWc,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,GAChD,OACE,2BACE,gBACEC,IACEF,EAAY,yCAC0BA,GAD1B,UAELG,GAETC,IAAI,SACJC,MAAM,MACNC,QAAQ,UAEV,UAACzB,EAAD,YACE,uBAAIiB,KACJ,uCAAeC,UAbVE,EAiBZ,KAGN,C,sBCxCD,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOvB,GAEP,YADAiB,EAAOjB,EAET,CAEIsB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO3B,KAAKsB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C,+KClCMC,EAAU,gCACVC,EAAU,mCASHC,EAAW,6BAAG,sGACFC,MAAM,KAAD,OAC5BH,EAD4B,sCACSC,EADT,iBADH,YACnBG,EADmB,QAIZC,GAJY,gCAKED,EAASE,KAAK,IALhB,cAKjBC,EALiB,yBAMhBA,GANgB,gCAQlBjB,QAAQR,OAAO,IAAI0B,MAAJ,WARG,2CAAH,qDAWXC,EAAe,6BAAG,WAAMC,GAAN,yFACNP,MAAM,YAAD,OACrBH,EADqB,gCACUC,EADV,8BACuCS,EADvC,sCADC,YACvBN,EADuB,QAIhBC,GAJgB,gCAKPD,EAASE,KAAK,IALP,cAKrBI,EALqB,yBAMpBA,GANoB,gCAQtBpB,QAAQR,OAAO,IAAI0B,MAAJ,WARO,2CAAH,sDAWfG,EAAU,6BAAG,WAAMtD,GAAN,yFACD8C,MAAM,GAAD,OACvBH,EADuB,iBACP3C,EADO,oBACY4C,EADZ,iBADJ,YAClBG,EADkB,QAIXC,GAJW,gCAKKD,EAASE,KAAK,IALnB,cAKhBM,EALgB,yBAMfA,GANe,gCAQjBtB,QAAQR,OAAO,IAAI0B,MAAJ,WARE,2CAAH,sDAWVK,EAAc,6BAAG,WAAMH,GAAN,yFACLP,MAAM,YAAD,OAzChB,wBAyCgB,wBAxCf,mCAwCe,kBACsBO,EADtB,WADA,YACtBN,EADsB,QAIfC,GAJe,gCAKND,EAASE,KAAK,IALR,cAKpBI,EALoB,yBAMnBA,GANmB,gCAQrBpB,QAAQR,OAAO,IAAI0B,MAAJ,WARM,2CAAH,sDAsBdhD,EAAO,6BAAG,WAAMH,GAAN,yFACG8C,MAAM,KAAD,OAC7BH,EAD6B,iBACb3C,EADa,4BACc4C,EADd,uBADR,YACfa,EADe,QAIPT,GAJO,gCAKCS,EAAUR,KAAK,IALhB,cAKb5C,EALa,yBAMZA,GANY,gCAQd4B,QAAQR,OAAO,IAAI0B,MAAJ,WARD,2CAAH,sDAWPO,EAAU,6BAAG,WAAM1D,GAAN,yFACA8C,MAAM,KAAD,OAC7BH,EAD6B,iBACb3C,EADa,4BACc4C,EADd,uBADL,YAClBa,EADkB,QAIVT,GAJU,gCAKAS,EAAUR,KAAK,IALf,cAKhBU,EALgB,yBAMfA,GANe,gCAQjB1B,QAAQR,OAAO,IAAI0B,MAAJ,WARE,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin-top: 15px;\n`;\n\nexport const Div = styled.div`\n  margin-top: 8px;\n  max-width: 200px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/api';\nimport { List, Div } from 'components/Cast/Cast.styled';\nimport image from 'image/image.png';\n\nconst Cast = () => {\n  const [movieCasts, setMovieCasts] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId)\n      .then(casts => setMovieCasts(casts.cast))\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  return (\n    <List>\n      {movieCasts.map(({ name, character, profile_path, id }) => {\n        return (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                  : `${image}`\n              }\n              alt=\"poster\"\n              width=\"200\"\n              loading=\"lazy\"\n            />\n            <Div>\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </Div>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const baseUrl = 'https://api.themoviedb.org/3/';\nconst KEY_API = 'a19b1687fe9e52121952a921faf7bb58';\n\nconst bazonUrl = `https://bazon.cc/api/`;\nconst KEY_BAZON = `c69778ce88918520e7adb0dc758dbe37`;\n\n//bazon.cc/api/search?token=c69778ce88918520e7adb0dc758dbe37&title=Бетмен\n\n//bazon.cc/api/search?token=c69778ce88918520e7adb0dc758dbe37&kp=841738\n\nexport const getTrending = async () => {\n  const response = await fetch(`\n${baseUrl}trending/movie/day?api_key=${KEY_API}&language=ru`);\n\n  if (response.ok) {\n    const listMovies = await response.json('');\n    return listMovies;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getSearchMovies = async query => {\n  const response = await fetch(`\n       ${baseUrl}search/movie?api_key=${KEY_API}&language=ru&query=${query}&page=1&include_adult=false\n    `);\n  if (response.ok) {\n    const query = await response.json('');\n    return query;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getDetails = async movieId => {\n  const response = await fetch(\n    `${baseUrl}movie/${movieId}?api_key=${KEY_API}&language=ru`\n  );\n  if (response.ok) {\n    const movieDetails = await response.json('');\n    return movieDetails;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getSearchTitle = async query => {\n  const response = await fetch(`\n       ${bazonUrl}search?token=${KEY_BAZON}&title=${query}\n    `);\n  if (response.ok) {\n    const query = await response.json('');\n    return query;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\n// export const getDetails = async movieId => {\n//   const response = await fetch(\n//     `${bazonUrl}search?token=${KEY_BAZON}&kp=${movieId}`\n//   );\n//   if (response.ok) {\n//     const movieDetails = await response.json('');\n//     return movieDetails;\n//   }\n//   return Promise.reject(new Error(`error`));\n// };\n\nexport const getCast = async movieId => {\n  const responnse = await fetch(`\n${baseUrl}movie/${movieId}/credits?api_key=${KEY_API}&language=uk\n    `);\n  if (responnse.ok) {\n    const casts = await responnse.json('');\n    return casts;\n  }\n  return Promise.reject(new Error(`error`));\n};\n\nexport const getReviews = async movieId => {\n  const responnse = await fetch(`\n${baseUrl}movie/${movieId}/reviews?api_key=${KEY_API}&language=uk\n    `);\n  if (responnse.ok) {\n    const reviews = await responnse.json('');\n    return reviews;\n  }\n  return Promise.reject(new Error(`error`));\n};\n"],"names":["List","styled","Div","useState","movieCasts","setMovieCasts","movieId","useParams","useEffect","getCast","then","casts","cast","catch","error","console","log","message","map","name","character","profile_path","id","src","image","alt","width","loading","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","baseUrl","KEY_API","getTrending","fetch","response","ok","json","listMovies","Error","getSearchMovies","query","getDetails","movieDetails","getSearchTitle","responnse","getReviews","reviews"],"sourceRoot":""}